% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/include.R
\name{include}
\alias{include}
\title{Include exports in Search Path}
\usage{
include(package, exports = NULL, lib = .libPaths(), pos = 2L, warn = NULL)
}
\arguments{
\item{package}{string naming the package/name space to load.}

\item{exports}{A character vector of exports.  When named, these exports will
be aliases as such.}

\item{lib}{See \code{lib.loc} in \code{\link[base:ns-load]{base::loadNamespace()}}}

\item{pos}{integer specifying position to attach.}

\item{warn}{See \code{warn.conflicts} in \code{\link[base:attach]{base::attach()}}.  The default \code{NA}
converts all \code{packageStartupMessage}s to \code{verboseMessage}s}
}
\value{
Nothing, called for its side-effects
}
\description{
\code{\link[=include]{include()}} checks whether or not the namespace has been loaded
to the \code{\link[base:search]{base::search()}} path.  It uses the naming convention
\code{include:{package}} to denote the differences from loading via
\code{\link[base:library]{base::library()}} or \code{\link[base:library]{base::require()}}. When \code{exports} is \code{NULL}, the
environment is detached from the search path if found.  When \code{exports} is
not \code{NULL},

\strong{Note:} This function has the specific purpose of affecting the search
path.  Use \code{options(fuj.verbose = TRUE)} or \code{options(verbose = TRUE)} for
more information.
}
\details{
Include (attach) a package and specific exports to Search Path
}
\examples{
# include(package) will ensure that the entire package is attached
include("fuj")
head(ls("include:fuj"), 20)
detach("include:fuj", character.only = TRUE)

# include a single export
include("fuj", "collapse")

# include multiple exports, and alias
include("fuj", c(
  no_names = "remove_names",
  match_any = "any_match"
))

# include an export where the alias has a warn conflict
include("fuj", c(attr = "exattr"))

# note that all 4 exports are included
ls("include:fuj")

# all exports are the same
identical(collapse, fuj::collapse)
identical(no_names, fuj::remove_names)
identical(match_any, fuj::any_match)
identical(attr, fuj::exattr)
}
